version: '3.9'

services:
  explorer:
    build:
      dockerfile: Dockerfile
      context: ../back-end
      target: final
    restart: on-failure
    networks:
      - postgreDB
      - gateway
    ports:
      - "8081:80"
    environment:
      DATABASE_HOST: postgreDB
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: super
      DATABASE_USER: postgres
      DATABASE_SCHEMA: explorer
    depends_on:
      - postgreDB
  
  blog-service:
    build:
      dockerfile: Dockerfile
      context: ../blog-service
      target: final
    restart: on-failure
    networks:
      - blogDB
      - gateway
    ports:
      - "8090:80"
    environment:
      DATABASE_HOST: blogDB
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: super
      DATABASE_USER: postgres
      DATABASE_SCHEMA: explorer
      DATABASE_SCHEMA_NAME: blog
      USER_SERVICE_URL: auth-service:80
    depends_on:
      blogDB:
        condition: service_healthy

  
  auth-service:
    build:
      dockerfile: Dockerfile
      context: ../auth-service
      target: final
    restart: on-failure
    networks:
      - gateway
    ports:
      - "8100:80"
    environment:
      PORT: 80
      JWT_SECRET: golang-en^aj$^h@aqu=^7xzv6-0x+is-((zoe^gf1dljqio1f#4)k3^d
      MAIL_USER: slobodanobradovic24@gmail.com
      MAIL_APP_PASSWORD: bpwzyoxdvsbnwupp
      MONGO_DB_URI: mongodb+srv://sloba:sloba@cluster0.26mybem.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0

  gateway-service:
    build:
      dockerfile: Dockerfile
      context: ../gateway-service
      target: final
    restart: on-failure
    networks:
      - gateway
    ports:
      - "8110:80"
    environment:
      AUTH_SERVICE_URL: http://auth-service:80
      USER_SERVICE_URL: http://auth-service:80
      BLOG_SERVICE_URL: http://blog-service:80
      ASP_SERVICE_URL: http://explorer:80
      PORT: 80
    depends_on:
      - explorer
      - blog-service
      - auth-service
  
  front:
    build:
      dockerfile: Dockerfile
      context: ../front-end/Explorer
      target: final
    restart: on-failure
    networks:
      - gateway
    ports:
      - "4200:80"
    depends_on:
      - gateway-service

  blogDB:
    image: postgres:13
    restart: always
    networks:
      - blogDB
    environment:
      POSTGRES_PASSWORD: super
      POSTGRES_USER: postgres
      POSTGRES_DB: explorer
    volumes:
      - type: volume
        source: blog-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ../blog-service/insert.sql
        target: /tmp/insert.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgreDB:
    image: postgres:13
    restart: always
    networks:
      - postgreDB
    environment:
      POSTGRES_PASSWORD: super
      POSTGRES_USER: postgres
      POSTGRES_DB: explorer
    volumes:
      - type: volume
        source: database-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ../back-end/insert.sql
        target: /tmp/insert.sql
  


volumes:
  database-data:
    name: explorer
  blog-data:
    name: blog-vol

networks:
  gateway:
    name: gateway
    driver: bridge
  postgreDB:
    name: postgreDB
    driver: bridge
  blogDB:
    name: blogDB
    driver: bridge